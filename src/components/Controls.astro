---

import PauseIcon from "@components/icons/PauseIcon.astro";

---

<style lang="scss">
  .controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.7);
    padding: 10px;
    position: absolute;
    bottom: 10px;
    left: 0;
    right: 0;
    color: white;
    z-index: 9;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
    bottom: 0;
    position: absolute;
    width: 100%;

    &.show {
      opacity: 1;
    }
  }

  .controls button {
    background: none;
    border: none;
    color: white;
    cursor: pointer;
    font-size: 16px;
  }
</style>

<div class="controls show">
  <button id="play-pause-button">
    <PauseIcon height="30" width="30" />
  </button>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const $controls = document.querySelector(".controls");
    const $video = document.querySelector("video");
    const $playButton = document.querySelector("#play-pause-button");

    const togglePlayPause = () => {
      if ($video.paused) {
        $video.play();
        $playButton.innerHTML = `<svg height=30 stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 320 512" xmlns="http://www.w3.org/2000/svg"><path d="M48 64C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h32c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H48zm192 0c-26.5 0-48 21.5-48 48v288c0 26.5 21.5 48 48 48h32c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48h-32z" stroke="none"/></svg>`;
      } else {
        $video.pause();
        $playButton.innerHTML = `<svg height=30 stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 384 512" xmlns="http://www.w3.org/2000/svg"><path d="M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80v352c0 17.4 9.4 33.4 24.5 41.9S58.2 482 73 473l288-176c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z" stroke="none"/></svg>`;
      }
    };

    $playButton.addEventListener("click", togglePlayPause);

    let timeoutId;

    const showControls = () => {
      $controls.classList.add("show");
      if (timeoutId) {
        clearTimeout(timeoutId);
      }
      timeoutId = setTimeout(hideControls, 3000); 
    };

    const hideControls = () => {
      $controls.classList.remove("show");
    };

    const resetTimeout = () => {
      clearTimeout(timeoutId);
      showControls();
    };
    
    $controls.addEventListener("mousemove", resetTimeout);
    $controls.addEventListener("click", resetTimeout);
    $controls.addEventListener("touchstart", resetTimeout);

    $video.addEventListener("play", () => {
      timeoutId = setTimeout(hideControls, 3000);
    });

    $controls.addEventListener("mouseover", showControls);
    $controls.addEventListener("mouseleave", () => {
      timeoutId = setTimeout(hideControls, 3000);
    });

    $video.addEventListener("pause", showControls);

    showControls();
  })
</script>
